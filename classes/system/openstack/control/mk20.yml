classes:
- system.linux.system.lowmem
- system.linux.system.repo.contrail
- system.linux.system.repo.mos8
- service.keepalived.cluster.single
- service.haproxy.proxy.single
- service.memcached.server.single
- service.rabbitmq.server.cluster
- system.keystone.server.cluster
- system.keystone.client.single
- system.glance.control.cluster
- system.nova.control.cluster
- system.neutron.control.cluster
- system.cinder.control.cluster
- system.heat.server.cluster
- system.opencontrail.control.cluster
- system.horizon.server.cluster
parameters:
  _param:
    keepalived_vip_interface: eth1
  linux:
    system:
      package:
        python-msgpack:
          version: latest
  keepalived:
    cluster:
      instance:
        VIP:
          virtual_router_id: 150
  rabbitmq:
    server:
      host:
        '/':
          enabled: true
          user: guest
          password: guest
          policies:
          - name: HA
            pattern: '^(?!amq\.).*'
            definition: '{"ha-mode": "all", "message-ttl": 120000}'
        '/openstack':
          enabled: true
          user: openstack
          password: ${_param:rabbitmq_openstack_password}
          policies:
          - name: HA
            pattern: '^(?!amq\.).*'
            definition: '{"ha-mode": "all", "message-ttl": 120000}'
  keystone:
    server:
      admin_email: ${_param:admin_email}
  glance:
    server:
      storage:
        engine: file
      images: []
      workers: 1
  nova:
    controller:
      networking: contrail
      cpu_allocation: 54
      bind:
        private_address: ${_param:cluster_local_address}
        public_address: ${_param:cluster_vip_address}
        novncproxy_port: 6080
      vncproxy_url: http://${_param:cluster_vip_address}:6080
      cache:
        engine: memcached
        prefix: CACHE_NOVA
        members:
        - host: 127.0.0.1
          port: 11211
      workers: 1
  neutron:
    server:
      plugin: contrail
      tunnel_type: vxlan
      public_networks: []
      contrail:
        version: ${_param:opencontrail_version}
  haproxy:
    proxy:
      listen:
        mysql_cluster:
          type: mysql
          binds:
          - address: ${_param:cluster_vip_address}
            port: 3306
          servers:
          - name: ${_param:cluster_node01_hostname}
            host: ${_param:cluster_node01_address}
            port: 3306
            params: check
          - name: ${_param:cluster_node02_hostname}
            host: ${_param:cluster_node02_address}
            port: 3306
            params: backup check
          - name: ${_param:cluster_node03_hostname}
            host: ${_param:cluster_node03_address}
            port: 3306
            params: backup check
  cinder:
    volume:
      notification: true
    controller:
      notification: true
